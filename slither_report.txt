'forge clean' running (wd: /Users/solal/Documents/GitHub/contracts)
'forge config --json' running
'forge build --build-info --skip */test/** */script/** --force' running (wd: /Users/solal/Documents/GitHub/contracts)
INFO:Detectors:
StableWrapper.depositToVault(address,uint256) (src/stableWrapper.sol#63-76) uses arbitrary from in transferFrom: IERC20(asset).safeTransferFrom(from,address(this),amount) (src/stableWrapper.sol#70)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
OFTCore._removeDust(uint256) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#343-345) performs a multiplication on the result of a division:
	- (_amountLD / decimalConversionRate) * decimalConversionRate (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#344)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
StreamVault._redeem(uint256,bool) (src/StreamVault.sol#339-371) uses a dangerous strict equality:
	- numShares == 0 (src/StreamVault.sol#353)
StreamVault._stakeInternal(uint104,address) (src/StreamVault.sol#191-226) uses a dangerous strict equality:
	- currentRound == stakeReceipt.round (src/StreamVault.sol#215)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
OFTCore._buildMsgAndOptions(SendParam,uint256) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#231-253) ignores return value by IOAppMsgInspector(inspector).inspect(message,options) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#252)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
OFT.constructor(string,string,address,address)._name (lib/devtools/packages/oft-evm/contracts/OFT.sol#21) shadows:
	- ERC20._name (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#41) (state variable)
OFT.constructor(string,string,address,address)._symbol (lib/devtools/packages/oft-evm/contracts/OFT.sol#22) shadows:
	- ERC20._symbol (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#42) (state variable)
StreamVault.rescueTokens(address,uint256).token (src/StreamVault.sol#565) shadows:
	- OFT.token() (lib/devtools/packages/oft-evm/contracts/OFT.sol#33-35) (function)
	- IOFT.token() (lib/devtools/packages/oft-evm/contracts/interfaces/IOFT.sol#89) (function)
StableWrapper.constructor(address,string,string,address,address,address)._name (src/stableWrapper.sol#46) shadows:
	- ERC20._name (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#41) (state variable)
StableWrapper.constructor(address,string,string,address,address,address)._symbol (src/stableWrapper.sol#47) shadows:
	- ERC20._symbol (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#42) (state variable)
StableWrapper.transferAsset(address,uint256,address).token (src/stableWrapper.sol#211) shadows:
	- OFT.token() (lib/devtools/packages/oft-evm/contracts/OFT.sol#33-35) (function)
	- IOFT.token() (lib/devtools/packages/oft-evm/contracts/interfaces/IOFT.sol#89) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
StreamVault.setNewKeeper(address) (src/StreamVault.sol#459-462) should emit an event for: 
	- keeper = newKeeper (src/StreamVault.sol#461) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
OFTCore.setMsgInspector(address)._msgInspector (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#96) lacks a zero-check on :
		- msgInspector = _msgInspector (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#97)
OAppPreCrimeSimulator.setPreCrime(address)._preCrime (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#32) lacks a zero-check on :
		- preCrime = _preCrime (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#33)
StreamVault.constructor(address,string,string,address,address,address,Vault.VaultParams)._stableWrapper (src/StreamVault.sol#97) lacks a zero-check on :
		- stableWrapper = _stableWrapper (src/StreamVault.sol#111)
StableWrapper.constructor(address,string,string,address,address,address)._keeper (src/stableWrapper.sol#48) lacks a zero-check on :
		- keeper = _keeper (src/stableWrapper.sol#56)
StableWrapper.setKeeper(address)._keeper (src/stableWrapper.sol#175) lacks a zero-check on :
		- keeper = _keeper (src/stableWrapper.sol#177)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
OAppPreCrimeSimulator.lzReceiveAndRevert(InboundPacket[]) (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#45-70) has external calls inside a loop: this.lzReceiveSimulate{value: packet.value}(packet.origin,packet.guid,packet.message,packet.executor,packet.extraData) (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#59-65)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in StableWrapper.deposit(address,uint256) (src/stableWrapper.sol#83-94):
	External calls:
	- IERC20(asset).safeTransferFrom(msg.sender,address(this),amount) (src/stableWrapper.sol#88)
	State variables written after the call(s):
	- _mint(to,amount) (src/stableWrapper.sol#91)
		- _balances[from] = fromBalance - value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#199)
		- _balances[to] += value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#211)
	- _mint(to,amount) (src/stableWrapper.sol#91)
		- _totalSupply += value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#191)
		- _totalSupply -= value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#206)
Reentrancy in StreamVault.depositAndStake(uint104) (src/StreamVault.sol#124-129):
	External calls:
	- IStableWrapper(stableWrapper).depositToVault(msg.sender,amount) (src/StreamVault.sol#125)
	State variables written after the call(s):
	- _stakeInternal(amount,msg.sender) (src/StreamVault.sol#128)
		- stakeReceipts[creditor] = Vault.StakeReceipt({round:currentRound,amount:stakeAmount,unredeemedShares:uint128(unredeemedShares)}) (src/StreamVault.sol#219-223)
	- _stakeInternal(amount,msg.sender) (src/StreamVault.sol#128)
		- vaultState.totalPending = vaultState.totalPending + amount (src/StreamVault.sol#225)
Reentrancy in StableWrapper.depositToVault(address,uint256) (src/stableWrapper.sol#63-76):
	External calls:
	- IERC20(asset).safeTransferFrom(from,address(this),amount) (src/stableWrapper.sol#70)
	State variables written after the call(s):
	- _mint(owner(),amount) (src/stableWrapper.sol#73)
		- _balances[from] = fromBalance - value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#199)
		- _balances[to] += value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#211)
	- _mint(owner(),amount) (src/stableWrapper.sol#73)
		- _totalSupply += value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#191)
		- _totalSupply -= value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#206)
Reentrancy in StreamVault.stake(uint104,address) (src/StreamVault.sol#171-184):
	External calls:
	- IERC20(vaultParams.asset).safeTransferFrom(msg.sender,address(this),amount) (src/StreamVault.sol#177-181)
	State variables written after the call(s):
	- _stakeInternal(amount,creditor) (src/StreamVault.sol#183)
		- stakeReceipts[creditor] = Vault.StakeReceipt({round:currentRound,amount:stakeAmount,unredeemedShares:uint128(unredeemedShares)}) (src/StreamVault.sol#219-223)
	- _stakeInternal(amount,creditor) (src/StreamVault.sol#183)
		- vaultState.totalPending = vaultState.totalPending + amount (src/StreamVault.sol#225)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in OFTCore._lzReceive(Origin,bytes32,bytes,address,bytes) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#266-297):
	External calls:
	- endpoint.sendCompose(toAddress,_guid,0,composeMsg) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#293)
	Event emitted after the call(s):
	- OFTReceived(_guid,_origin.srcEid,toAddress,amountReceivedLD) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#296)
Reentrancy in OFTCore._send(SendParam,MessagingFee,address) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#198-222):
	External calls:
	- msgReceipt = _lzSend(_sendParam.dstEid,message,options,_fee,_refundAddress) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#217)
		- returndata = address(token).functionCall(data) (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#96)
		- IERC20(lzToken).safeTransferFrom(msg.sender,address(endpoint),_lzTokenFee) (lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol#122)
		- endpoint.send{value: messageValue}(MessagingParams(_dstEid,_getPeerOrRevert(_dstEid),_message,_options,_fee.lzTokenFee > 0),_refundAddress) (lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol#85-90)
		- (success,returndata) = target.call{value: value}(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#87)
	External calls sending eth:
	- msgReceipt = _lzSend(_sendParam.dstEid,message,options,_fee,_refundAddress) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#217)
		- endpoint.send{value: messageValue}(MessagingParams(_dstEid,_getPeerOrRevert(_dstEid),_message,_options,_fee.lzTokenFee > 0),_refundAddress) (lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol#85-90)
		- (success,returndata) = target.call{value: value}(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#87)
	Event emitted after the call(s):
	- OFTSent(msgReceipt.guid,_sendParam.dstEid,msg.sender,amountSentLD,amountReceivedLD) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#221)
Reentrancy in StableWrapper.transferAsset(address,uint256,address) (src/stableWrapper.sol#211-217):
	External calls:
	- IERC20(token).safeTransfer(to,amount) (src/stableWrapper.sol#215)
	Event emitted after the call(s):
	- AssetTransferred(to,amount) (src/stableWrapper.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
OAppOptionsType3._assertOptionsType3(bytes) (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#91-97) uses assembly
	- INLINE ASM (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#93-95)
AddressCast.toBytes(bytes32,uint256) (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#22-31) uses assembly
	- INLINE ASM (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#27-29)
Address._revert(bytes) (lib/openzeppelin-contracts/contracts/utils/Address.sol#146-158) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Address.sol#151-154)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
3 different versions of Solidity are used:
	- Version constraint ^0.8.20 is used by:
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OApp.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppMsgInspector.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol#2)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/interfaces/IOAppPreCrimeSimulator.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/interfaces/IPreCrime.sol#3)
		-^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/libs/Packet.sol#3)
		-^0.8.20 (lib/devtools/packages/oft-evm/contracts/OFT.sol#3)
		-^0.8.20 (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#3)
		-^0.8.20 (lib/devtools/packages/oft-evm/contracts/interfaces/IOFT.sol#3)
		-^0.8.20 (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#3)
		-^0.8.20 (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#3)
		-^0.8.20 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#3)
		-^0.8.20 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#3)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#3)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Address.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Context.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#4)
		-^0.8.20 (src/StreamVault.sol#2)
		-^0.8.20 (src/interfaces/IStableWrapper.sol#2)
		-^0.8.20 (src/lib/ShareMath.sol#2)
		-^0.8.20 (src/lib/Vault.sol#2)
		-^0.8.20 (src/stableWrapper.sol#2)
	- Version constraint >=0.8.0 is used by:
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ILayerZeroEndpointV2.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ILayerZeroReceiver.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessageLib.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessageLibManager.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingChannel.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingComposer.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingContext.sol#3)
		->=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ISendLib.sol#3)
	- Version constraint =0.8.20 is used by:
		-=0.8.20 (src/interfaces/IWETH.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OApp.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/OAppSender.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppMsgInspector.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol#2)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/interfaces/IOAppPreCrimeSimulator.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/interfaces/IPreCrime.sol#3)
	- ^0.8.20 (lib/devtools/packages/oapp-evm/contracts/precrime/libs/Packet.sol#3)
	- ^0.8.20 (lib/devtools/packages/oft-evm/contracts/OFT.sol#3)
	- ^0.8.20 (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#3)
	- ^0.8.20 (lib/devtools/packages/oft-evm/contracts/interfaces/IOFT.sol#3)
	- ^0.8.20 (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#3)
	- ^0.8.20 (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#3)
	- ^0.8.20 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#3)
	- ^0.8.20 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#3)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#3)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Address.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Context.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#4)
	- ^0.8.20 (src/StreamVault.sol#2)
	- ^0.8.20 (src/interfaces/IStableWrapper.sol#2)
	- ^0.8.20 (src/lib/ShareMath.sol#2)
	- ^0.8.20 (src/lib/Vault.sol#2)
	- ^0.8.20 (src/stableWrapper.sol#2)
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ILayerZeroEndpointV2.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ILayerZeroReceiver.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessageLib.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessageLibManager.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingChannel.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingComposer.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/IMessagingContext.sol#3)
	- >=0.8.0 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/interfaces/ISendLib.sol#3)
Version constraint =0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- =0.8.20 (src/interfaces/IWETH.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in SafeERC20._callOptionalReturnBool(IERC20,bytes) (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#110-117):
	- (success,returndata) = address(token).call(data) (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#115)
Low level call in Address.sendValue(address,uint256) (lib/openzeppelin-contracts/contracts/utils/Address.sol#41-50):
	- (success,None) = recipient.call{value: amount}() (lib/openzeppelin-contracts/contracts/utils/Address.sol#46)
Low level call in Address.functionCallWithValue(address,bytes,uint256) (lib/openzeppelin-contracts/contracts/utils/Address.sol#83-89):
	- (success,returndata) = target.call{value: value}(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#87)
Low level call in Address.functionStaticCall(address,bytes) (lib/openzeppelin-contracts/contracts/utils/Address.sol#95-98):
	- (success,returndata) = target.staticcall(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#96)
Low level call in Address.functionDelegateCall(address,bytes) (lib/openzeppelin-contracts/contracts/utils/Address.sol#104-107):
	- (success,returndata) = target.delegatecall(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#105)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter OAppCore.setPeer(uint32,bytes32)._eid (lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol#43) is not in mixedCase
Parameter OAppCore.setPeer(uint32,bytes32)._peer (lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol#43) is not in mixedCase
Parameter OAppCore.setDelegate(address)._delegate (lib/devtools/packages/oapp-evm/contracts/oapp/OAppCore.sol#80) is not in mixedCase
Parameter OAppReceiver.isComposeMsgSender(Origin,bytes,address)._sender (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#49) is not in mixedCase
Parameter OAppReceiver.lzReceive(Origin,bytes32,bytes,address,bytes)._origin (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#96) is not in mixedCase
Parameter OAppReceiver.lzReceive(Origin,bytes32,bytes,address,bytes)._guid (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#97) is not in mixedCase
Parameter OAppReceiver.lzReceive(Origin,bytes32,bytes,address,bytes)._message (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#98) is not in mixedCase
Parameter OAppReceiver.lzReceive(Origin,bytes32,bytes,address,bytes)._executor (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#99) is not in mixedCase
Parameter OAppReceiver.lzReceive(Origin,bytes32,bytes,address,bytes)._extraData (lib/devtools/packages/oapp-evm/contracts/oapp/OAppReceiver.sol#100) is not in mixedCase
Parameter OAppOptionsType3.setEnforcedOptions(EnforcedOptionParam[])._enforcedOptions (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#28) is not in mixedCase
Parameter OAppOptionsType3.combineOptions(uint32,uint16,bytes)._eid (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#64) is not in mixedCase
Parameter OAppOptionsType3.combineOptions(uint32,uint16,bytes)._msgType (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#65) is not in mixedCase
Parameter OAppOptionsType3.combineOptions(uint32,uint16,bytes)._extraOptions (lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol#66) is not in mixedCase
Parameter OAppPreCrimeSimulator.setPreCrime(address)._preCrime (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#32) is not in mixedCase
Parameter OAppPreCrimeSimulator.lzReceiveAndRevert(InboundPacket[])._packets (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#45) is not in mixedCase
Parameter OAppPreCrimeSimulator.lzReceiveSimulate(Origin,bytes32,bytes,address,bytes)._origin (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#85) is not in mixedCase
Parameter OAppPreCrimeSimulator.lzReceiveSimulate(Origin,bytes32,bytes,address,bytes)._guid (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#86) is not in mixedCase
Parameter OAppPreCrimeSimulator.lzReceiveSimulate(Origin,bytes32,bytes,address,bytes)._message (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#87) is not in mixedCase
Parameter OAppPreCrimeSimulator.lzReceiveSimulate(Origin,bytes32,bytes,address,bytes)._executor (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#88) is not in mixedCase
Parameter OAppPreCrimeSimulator.lzReceiveSimulate(Origin,bytes32,bytes,address,bytes)._extraData (lib/devtools/packages/oapp-evm/contracts/precrime/OAppPreCrimeSimulator.sol#89) is not in mixedCase
Parameter PacketDecoder.decode(bytes)._packet (lib/devtools/packages/oapp-evm/contracts/precrime/libs/Packet.sol#35) is not in mixedCase
Parameter PacketDecoder.decode(bytes[],uint256[])._packets (lib/devtools/packages/oapp-evm/contracts/precrime/libs/Packet.sol#50) is not in mixedCase
Parameter PacketDecoder.decode(bytes[],uint256[])._packetMsgValues (lib/devtools/packages/oapp-evm/contracts/precrime/libs/Packet.sol#51) is not in mixedCase
Parameter OFTCore.setMsgInspector(address)._msgInspector (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#96) is not in mixedCase
Parameter OFTCore.quoteOFT(SendParam)._sendParam (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#109) is not in mixedCase
Parameter OFTCore.quoteSend(SendParam,bool)._sendParam (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#146) is not in mixedCase
Parameter OFTCore.quoteSend(SendParam,bool)._payInLzToken (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#147) is not in mixedCase
Parameter OFTCore.send(SendParam,MessagingFee,address)._sendParam (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#176) is not in mixedCase
Parameter OFTCore.send(SendParam,MessagingFee,address)._fee (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#177) is not in mixedCase
Parameter OFTCore.send(SendParam,MessagingFee,address)._refundAddress (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#178) is not in mixedCase
Parameter OFTCore.isPeer(uint32,bytes32)._eid (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#331) is not in mixedCase
Parameter OFTCore.isPeer(uint32,bytes32)._peer (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#331) is not in mixedCase
Parameter OFTComposeMsgCodec.encode(uint64,uint32,uint256,bytes)._nonce (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#21) is not in mixedCase
Parameter OFTComposeMsgCodec.encode(uint64,uint32,uint256,bytes)._srcEid (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#22) is not in mixedCase
Parameter OFTComposeMsgCodec.encode(uint64,uint32,uint256,bytes)._amountLD (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#23) is not in mixedCase
Parameter OFTComposeMsgCodec.encode(uint64,uint32,uint256,bytes)._composeMsg (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#24) is not in mixedCase
Parameter OFTComposeMsgCodec.nonce(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#34) is not in mixedCase
Parameter OFTComposeMsgCodec.srcEid(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#43) is not in mixedCase
Parameter OFTComposeMsgCodec.amountLD(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#52) is not in mixedCase
Parameter OFTComposeMsgCodec.composeFrom(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#61) is not in mixedCase
Parameter OFTComposeMsgCodec.composeMsg(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#70) is not in mixedCase
Parameter OFTComposeMsgCodec.addressToBytes32(address)._addr (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#79) is not in mixedCase
Parameter OFTComposeMsgCodec.bytes32ToAddress(bytes32)._b (lib/devtools/packages/oft-evm/contracts/libs/OFTComposeMsgCodec.sol#88) is not in mixedCase
Parameter OFTMsgCodec.encode(bytes32,uint64,bytes)._sendTo (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#19) is not in mixedCase
Parameter OFTMsgCodec.encode(bytes32,uint64,bytes)._amountShared (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#20) is not in mixedCase
Parameter OFTMsgCodec.encode(bytes32,uint64,bytes)._composeMsg (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#21) is not in mixedCase
Parameter OFTMsgCodec.isComposed(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#35) is not in mixedCase
Parameter OFTMsgCodec.sendTo(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#44) is not in mixedCase
Parameter OFTMsgCodec.amountSD(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#53) is not in mixedCase
Parameter OFTMsgCodec.composeMsg(bytes)._msg (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#62) is not in mixedCase
Parameter OFTMsgCodec.addressToBytes32(address)._addr (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#71) is not in mixedCase
Parameter OFTMsgCodec.bytes32ToAddress(bytes32)._b (lib/devtools/packages/oft-evm/contracts/libs/OFTMsgCodec.sol#80) is not in mixedCase
Parameter AddressCast.toBytes32(bytes)._addressBytes (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#9) is not in mixedCase
Parameter AddressCast.toBytes32(address)._address (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#18) is not in mixedCase
Parameter AddressCast.toBytes(bytes32,uint256)._addressBytes32 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#22) is not in mixedCase
Parameter AddressCast.toBytes(bytes32,uint256)._size (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#22) is not in mixedCase
Parameter AddressCast.toAddress(bytes32)._addressBytes32 (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#33) is not in mixedCase
Parameter AddressCast.toAddress(bytes)._addressBytes (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/libs/AddressCast.sol#37) is not in mixedCase
Parameter PacketV1Codec.encode(Packet)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#28) is not in mixedCase
Parameter PacketV1Codec.encodePacketHeader(Packet)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#41) is not in mixedCase
Parameter PacketV1Codec.encodePayload(Packet)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#53) is not in mixedCase
Parameter PacketV1Codec.header(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#57) is not in mixedCase
Parameter PacketV1Codec.version(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#61) is not in mixedCase
Parameter PacketV1Codec.nonce(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#65) is not in mixedCase
Parameter PacketV1Codec.srcEid(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#69) is not in mixedCase
Parameter PacketV1Codec.sender(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#73) is not in mixedCase
Parameter PacketV1Codec.senderAddressB20(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#77) is not in mixedCase
Parameter PacketV1Codec.dstEid(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#81) is not in mixedCase
Parameter PacketV1Codec.receiver(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#85) is not in mixedCase
Parameter PacketV1Codec.receiverB20(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#89) is not in mixedCase
Parameter PacketV1Codec.guid(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#93) is not in mixedCase
Parameter PacketV1Codec.message(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#97) is not in mixedCase
Parameter PacketV1Codec.payload(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#101) is not in mixedCase
Parameter PacketV1Codec.payloadHash(bytes)._packet (lib/layerzero-v2/packages/layerzero-v2/evm/protocol/contracts/messagelib/libs/PacketV1Codec.sol#105) is not in mixedCase
Function IERC20Permit.DOMAIN_SEPARATOR() (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol#89) is not in mixedCase
Parameter StableWrapper.setKeeper(address)._keeper (src/stableWrapper.sol#175) is not in mixedCase
Parameter StableWrapper.setAllowIndependence(bool)._allowIndependence (src/stableWrapper.sol#189) is not in mixedCase
Parameter StableWrapper.setAsset(address)._asset (src/stableWrapper.sol#199) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
StreamVault.stableWrapper (src/StreamVault.sol#48) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Detectors:
The function OFTCore.quoteOFT(SendParam) (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#108-133) reads maxAmountLD = IERC20(this.token()).totalSupply() (lib/devtools/packages/oft-evm/contracts/OFTCore.sol#117) with `this` which adds an extra STATICCALL.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-variable-read-in-external-context
INFO:Slither:. analyzed (47 contracts with 93 detectors), 117 result(s) found
